---
- hosts: primary_server
  become: true
  tasks:

  - name: Verify DB user already exists
    shell: mongo --host "replicaset/{{ inventory_hostname }}:27011" -u "test-user" -p "test-pass" --authenticationDatabase "admin" admin --eval "printjson(db.getUsers())"
    register: db_user_exists
    ignore_errors: yes

  - name: Add necessary file
    template: 
      src: "createUser.js.j2"
      dest: "./createUser.js"
    when: "monitoring_db_user_name not in db_user_exists.stdout"

  - name: Create database user on primary 
    shell: mongo --host "replicaset/{{ inventory_hostname }}:27011" -u "test-user" -p "test-pass" --authenticationDatabase "admin" admin ./createUser.js
    when: "monitoring_db_user_name not in db_user_exists.stdout"

  - name: Remove file
    file:
      path: "createUser.js"
      state: absent
    when: "monitoring_db_user_name not in db_user_exists.stdout"

- hosts: monitoring_server
  become: true
  tasks:

  - name: install docker
    yum:
      name : docker
      state : latest

  - name: service docker
    service:
      name : docker
      state : started
      enabled : yes

  - name: Start the Docker daemon
    systemd:
      name: docker
      state: started
      masked: no
  - name: Check docker installation_status
    shell: docker ps
    register: process_exists
    ignore_errors: yes

  - name: Create data container
    shell: docker create -v /srv --name pmm-data  percona/pmm-server:2 /bin/true
    when: "'pmm-server' not in process_exists.stdout"

  - name: Run server
    shell: docker run -d -p 8080:80 -p 8443:443 --volumes-from pmm-data --name pmm-server --restart always percona/pmm-server:2
    when: "'pmm-server' not in process_exists.stdout"

  - name: Verify installation
    uri:
      url: "https://{{ inventory_hostname }}:8443/graph/login"
      follow_redirects: none
      validate_certs: no
      return_content: yes
    register: installation_status
    failed_when: "'grafana-app' not in installation_status.content"
    retries: 3
    delay: 3

  - name: Change password
    shell: docker exec -t pmm-server bash -c  'ln -s /srv/grafana /usr/share/grafana/data; grafana-cli --homepath /usr/share/grafana admin reset-admin-password {{ monitoring_password }}'
     
- hosts: primary_server
  become: true
  tasks:

  - name: install gnupg2
    yum:
      name: gnupg2
      state: present
      update_cache: true

  - name: Deploy the GPG public key 
    rpm_key:
      key: https://repo.percona.com/yum/RPM-GPG-KEY-Percona
      state: present

  - name: Instal percona 
    yum:
      name: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
      enabled: yes
      state: present

  - name: Install percona client
    yum:
      name: pmm2-client
      state: present
      update_cache: true

